{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template is for VPC, ALB (Aplication Load Balancer), ASG (Auto Scaling Group)",
    "Parameters":
    {
        "WebServerKeyName":
        {
            "Description":"This key is used for ssh into EC2 instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }
    },
    "Resources":
    {
        "VPC":
        {
            "Type":"AWS::EC2::VPC",
            "Properties":{
                "CidrBlock":"10.0.0.0/16",
                "EnableDnsHostnames":true,
                "EnableDnsSupport":true,
                "Tags":[
                    {
                        "Key":"Name",
                        "Value":"BlockVPC"
                    }
                ]
            }
        },
        "InternetGateway":
        {
            "Type": "AWS::EC2::InternetGateway",
            "Properties":
            {
                "Tags": [ 
                    { 
                        "Key": "Name", 
                        "Value": "BlockIGW"
                    } 
                ]
            }
        },
        "VPCGatewayAttachment":        
        {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": 
            {
                "VpcId":
                {
                    "Ref":"VPC"
                },
                "InternetGatewayId": 
                {
                    "Ref": "InternetGateway"
                }
            }
        },
        "DMZ1public":
        {
            "Type":"AWS::EC2::Subnet",
            "Properties":
            {
                "AvailabilityZone":
                {
                    "Fn::Select":[
                        "0",
                        {
                            "Fn::GetAZs":""
                        }
                    ]
                },
                "CidrBlock":"10.0.1.0/24",
                "VpcId":
                {
                    "Ref":"VPC"
                },
                "Tags":
                [
                    {
                        "Key":"Name",
                        "Value":"DMZ1Public"
                    }
                ]
            }
        },
        "DMZ2public":
        {
            "Type":"AWS::EC2::Subnet",
            "Properties":
            {
                "AvailabilityZone":
                {
                    "Fn::Select":[
                            "1",
                            {
                                "Fn::GetAZs":""
                            }
                        ]
                    },
                    "CidrBlock":"10.0.2.0/24",
                    "VpcId":{
                        "Ref":"VPC"
                    },
                    "Tags":
                    [
                        {
                            "Key":"Name",
                            "Value":"DMZ2Public"
                        }
                    ]
                }
        },
        "Applayer1private":
        {
            "Type":"AWS::EC2::Subnet",
            "Properties":
            {
                "AvailabilityZone":{
                    "Fn::Select":[
                        "0",
                        {
                            "Fn::GetAZs":""
                        }
                    ]
                },
                "CidrBlock":"10.0.11.0/24",
                "VpcId":{
                    "Ref":"VPC"
                },
                "Tags":
                [
                    {
                        "Key":"Name",
                        "Value":"Applayer1private"
                    }
                ]
            }
        },
        "Applayer2private":
        {
            "Type":"AWS::EC2::Subnet",
            "Properties":
            {
                "AvailabilityZone":
                {
                    "Fn::Select":[
                        "1",
                        {
                            "Fn::GetAZs":""
                            }
                        ]
                },
                "CidrBlock":"10.0.12.0/24",
                "VpcId":{
                        "Ref":"VPC"
                    },
                "Tags":
                    [
                        {
                            "Key":"Name",
                            "Value":"Applayer2private"
                        }
                    ]
            }
        },
        "PublicRT":
        {
            "Type":"AWS::EC2::RouteTable",
            "Properties":{
                "VpcId":{
                    "Ref":"VPC"
                },
                "Tags":[
                    {
                        "Key":"Name",
                        "Value":"PublicRT"
                    }
                ]
            }
        },
        "RouteTableAssociationA":
        {
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":
            {
                "SubnetId":{
                    "Ref":"DMZ1public"
                },
                "RouteTableId":{
                    "Ref":"PublicRT"
                }
            }
        },
        "RouteTableAssociationB":
        {
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":
            {
                "SubnetId":{
                    "Ref":"DMZ2public"
                },
                "RouteTableId":{
                    "Ref":"PublicRT"
                }
            }
        },
        "RoutePublicToInternet":{
            "Type":"AWS::EC2::Route",
            "Properties":{
                "RouteTableId":{
                    "Ref":"PublicRT"
                },
                "DestinationCidrBlock":"0.0.0.0/0",
                "GatewayId":{
                    "Ref":"InternetGateway"
                }
            },
            "DependsOn":"VPCGatewayAttachment"
        },
        "NATElasticIp":
        {
            "Type" : "AWS::EC2::EIP",
            "Properties":{
                "Domain":"vpc"
            },
            "DependsOn":"VPCGatewayAttachment"
        },
        "NATGateway":
        {
            "Type" : "AWS::EC2::NatGateway",
            "DependsOn":"NATElasticIp",
            "Properties":
            {
                "AllocationId":
                {
                    "Fn::GetAtt":[
                        "NATElasticIp","AllocationId"
                    ]
                },
                "SubnetId":{
                    "Ref":"DMZ2public"
                }            
            }            
        },
        "NateGatewayRoute":
        {
            "Type":"AWS::EC2::Route",
            "Properties":{
                "RouteTableId":{
                    "Ref":"PrivateRT"
                },
                "DestinationCidrBlock":"0.0.0.0/0",
                "NATGatewayId":
                {
                    "Ref":"NATGateway"
                }
            }
        },
        "PrivateRT":
        {
            "Type":"AWS::EC2::RouteTable",
            "Properties":{
                "VpcId":{
                    "Ref":"VPC"
                },
                "Tags":[
                    {
                        "Key":"Name",
                        "Value":"PrivateRT"
                    }
                ]
            }
        },
        "RouteTableAssociationC":
        {
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":
            {
                "SubnetId":{
                    "Ref":"Applayer1private"
                },
                "RouteTableId":{
                    "Ref":"PrivateRT"
                }
            }
        },
        "RouteTableAssociationD":
        {
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":
            {
                "SubnetId":{
                    "Ref":"Applayer2private"
                },
                "RouteTableId":{
                    "Ref":"PrivateRT"
                }
            }
        },
        "DMZNACL":
        {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties":{
                "VpcId":{
                    "Ref":"VPC"
                },
                "Tags":[
                    {
                       "Key": "Name",
                       "Value":"DMZNACL"
                    }
                    
                ]
            }
        },
        "SubnetNetworkAclAssociationA":
        {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties":{
                "SubnetId":{
                    "Ref":"DMZ1public"
                },
                "NetworkAclId":{
                    "Ref":"DMZNACL"
                }
            }
        },
        "SubnetNetworkAclAssociationB":
        {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties":{
                "SubnetId":{
                    "Ref":"DMZ2public"
                },
                "NetworkAclId":{
                    "Ref":"DMZNACL"
                }
            }
        },
        "DMZNACLEntryIngress100":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"DMZNACL",
            "Properties":{
                "Ref":"DMZNACL"
            },
            "RuleNumber":100,
            "Protocol":6,
            "PortRange":{
                "From":22,
                "To":22
            },
            "RuleAction":"allow",
            "Egress":"false",
            "CidrBlock":"0.0.0.0/0"
        },
        "DMZNACLEntryIngress110":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"DMZNACL",
            "Properties":{
                "Ref":"DMZNACL"
            },
            "RuleNumber":110,
            "Protocol":6,
            "PortRange":{
                "From":80,
                "To":80
            },
            "RuleAction":"allow",
            "Egress":"false",
            "CidrBlock":"0.0.0.0/0"
        },
        "DMZNACLEntryIngress120":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"DMZNACL",
            "Properties":{
                "Ref":"DMZNACL"
            },
            "RuleNumber":120,
            "Protocol":6,
            "PortRange":{
                "From":443,
                "To":443
            },
            "RuleAction":"allow",
            "Egress":"false",
            "CidrBlock":"0.0.0.0/0"
        },
        "DMZNACLEntryIngress130":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"DMZNACL",
            "Properties":{
                "Ref":"DMZNACL"
            },
            "RuleNumber":130,
            "Protocol":6,
            "PortRange":{
                "From":1024,
                "To":65535
            },
            "RuleAction":"allow",
            "Egress":"false",
            "CidrBlock":"0.0.0.0/0"
        },
        "DMZNACLEntryEgress100":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"DMZNACL",
            "Properties":{
                "Ref":"DMZNACL"
            },
            "RuleNumber":100,
            "Protocol":6,
            "PortRange":{
                "From":22,
                "To":22
            },
            "RuleAction":"allow",
            "Egress":"true",
            "CidrBlock":"0.0.0.0/0"
        },
        "DMZNACLEntryEgress110":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"DMZNACL",
            "Properties":{
                "Ref":"DMZNACL"
            },
            "RuleNumber":110,
            "Protocol":6,
            "PortRange":{
                "From":80,
                "To":80
            },
            "RuleAction":"allow",
            "Egress":"true",
            "CidrBlock":"0.0.0.0/0"
        },
        "DMZNACLEntryEgress120":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"DMZNACL",
            "Properties":{
                "Ref":"DMZNACL"
            },
            "RuleNumber":120,
            "Protocol":6,
            "PortRange":{
                "From":443,
                "To":443
            },
            "RuleAction":"allow",
            "Egress":"true",
            "CidrBlock":"0.0.0.0/0"
        },
        "DMZNACLEntryEgress130":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"DMZNACL",
            "Properties":{
                "Ref":"DMZNACL"
            },
            "RuleNumber":130,
            "Protocol":6,
            "PortRange":{
                "From":1024,
                "To":65535
            },
            "RuleAction":"allow",
            "Egress":"true",
            "CidrBlock":"0.0.0.0/0"
        },
        "AppNACL":
        {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties":{
                "VpcId":{
                    "Ref":"VPC"
                },
                "Tags":[
                    {
                       "Key": "Name",
                       "Value":"AppNACL"
                    }
                    
                ]
            }
        },
        "SubnetNetworkAclAssociationC":
        {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties":{
                "SubnetId":{
                    "Ref":"Applayer1private"
                },
                "NetworkAclId":{
                    "Ref":"AppNACL"
                }
            }
        },
        "SubnetNetworkAclAssociationD":
        {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties":{
                "SubnetId":{
                    "Ref":"Applayer2private"
                },
                "NetworkAclId":{
                    "Ref":"AppNACL"
                }
            }
        },
        "AppNACLEntryIngress100":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"AppNACL",
            "Properties":{
                "Ref":"AppNACL"
            },
            "RuleNumber":100,
            "Protocol":6,
            "PortRange":{
                "From":22,
                "To":22
            },
            "RuleAction":"allow",
            "Egress":"false",
            "CidrBlock":"10.0.0.0/16"
        },
        "AppNACLEntryIngress110":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"AppNACL",
            "Properties":{
                "Ref":"AppNACL"
            },
            "RuleNumber":110,
            "Protocol":6,
            "PortRange":{
                "From":80,
                "To":80
            },
            "RuleAction":"allow",
            "Egress":"false",
            "CidrBlock":"10.0.0.0/16"
        },
        "AppNACLEntryIngress120":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"AppNACL",
            "Properties":{
                "Ref":"AppNACL"
            },
            "RuleNumber":120,
            "Protocol":6,
            "PortRange":{
                "From":443,
                "To":443
            },
            "RuleAction":"allow",
            "Egress":"false",
            "CidrBlock":"10.0.0.0/16"
        },
        "AppNACLEntryIngress130":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"AppNACL",
            "Properties":{
                "Ref":"AppNACL"
            },
            "RuleNumber":130,
            "Protocol":6,
            "PortRange":{
                "From":1024,
                "To":65535
            },
            "RuleAction":"allow",
            "Egress":"false",
            "CidrBlock":"0.0.0.0/0"
        },
        "AppNACLEntryEgress100":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"AppNACL",
            "Properties":{
                "Ref":"AppNACL"
            },
            "RuleNumber":100,
            "Protocol":6,
            "PortRange":{
                "From":22,
                "To":22
            },
            "RuleAction":"allow",
            "Egress":"true",
            "CidrBlock":"0.0.0.0/0"
        },
        "AppNACLEntryEgress110":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"AppNACL",
            "Properties":{
                "Ref":"AppNACL"
            },
            "RuleNumber":110,
            "Protocol":6,
            "PortRange":{
                "From":80,
                "To":80
            },
            "RuleAction":"allow",
            "Egress":"true",
            "CidrBlock":"0.0.0.0/0"
        },
        "AppNACLEntryEgress120":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"AppNACL",
            "Properties":{
                "Ref":"AppNACL"
            },
            "RuleNumber":120,
            "Protocol":6,
            "PortRange":{
                "From":443,
                "To":443
            },
            "RuleAction":"allow",
            "Egress":"true",
            "CidrBlock":"0.0.0.0/0"
        },
        "AppNACLEntryEgress130":{
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn":"AppNACL",
            "Properties":{
                "Ref":"AppNACL"
            },
            "RuleNumber":130,
            "Protocol":6,
            "PortRange":{
                "From":1024,
                "To":65535
            },
            "RuleAction":"allow",
            "Egress":"true",
            "CidrBlock":"10.0.0.0/16"
        },
        "LoadBalancer":{
            "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties":
            {
                "Subnets":[
                    {
                        "Ref":"DMZ1public"
                    },
                    {
                        "Ref":"DMZ2public"
                    }
                ],
                "Name":"load-balancer",
                "Type":"application",
                "Scheme":"internet-facing",
                "SecurityGroups":
                [
                    {
                        "Ref":"LoadBalancerSecurityGroup"
                    }
                ],
                "IpAddressType":"ipv4"
            },
            "Listener":{
                "Type":"AWS::ElasticLoadBalancingV2::Listener",
                "Properties":{
                    "DefaultActions":[
                        {
                            "Type":"forward",
                            "TargetGroupArn": 
                            { 
                                "Ref": "TargetGroup" 
                            }
                        }
                    ],
                    "LoadBalancerArn":{
                        "Ref":"LoadBalancer"
                    },
                    "Port":"80",
                    "Protocol":"HTTP"
                }
            },
            "TargetGroup":{
                "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
                "Properties" : {
                    "HealthCheckEnabled" : "Boolean",
                    "HealthCheckIntervalSeconds" : "10",
                    "HealthCheckPath" : "/phpinfo.php",
                    "HealthCheckPort" : "80",
                    "HealthCheckProtocol" : "HTTP",
                    "HealthyThresholdCount" : "2",
                    "Name" : "TG1",
                    "Port" : "80",
                    "Protocol" : "HTTP",
                    "UnhealthyThresholdCount" : "2",
                    "VpcId" : {
                        "Ref":"VPC"
                    }
            }                             
       
        }                
    }
}